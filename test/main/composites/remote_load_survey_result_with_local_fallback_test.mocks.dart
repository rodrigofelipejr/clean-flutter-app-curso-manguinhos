// Mocks generated by Mockito 5.0.10 from annotations
// in fordev/test/main/composites/remote_load_survey_result_with_local_fallback_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:fordev/data/cache/cache_storage.dart' as _i4;
import 'package:fordev/data/http/http_client.dart' as _i2;
import 'package:fordev/data/usecases/load_survey_result/local_load_survey_result.dart'
    as _i7;
import 'package:fordev/data/usecases/load_survey_result/remote_load_survey_result.dart'
    as _i5;
import 'package:fordev/domain/entities/survey_result_entity.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeHttpClient extends _i1.Fake implements _i2.HttpClient {}

class _FakeSurveyResultEntity extends _i1.Fake
    implements _i3.SurveyResultEntity {}

class _FakeCacheStorage extends _i1.Fake implements _i4.CacheStorage {}

/// A class which mocks [RemoteLoadSurveyResult].
///
/// See the documentation for Mockito's code generation for more information.
class RemoteLoadSurveyResultMock extends _i1.Mock
    implements _i5.RemoteLoadSurveyResult {
  RemoteLoadSurveyResultMock() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeHttpClient()) as _i2.HttpClient);
  @override
  String get url =>
      (super.noSuchMethod(Invocation.getter(#url), returnValue: '') as String);
  @override
  _i6.Future<_i3.SurveyResultEntity> loadBySurvey({String? surveyId}) => (super
      .noSuchMethod(Invocation.method(#loadBySurvey, [], {#surveyId: surveyId}),
          returnValue: Future<_i3.SurveyResultEntity>.value(
              _FakeSurveyResultEntity())) as _i6
      .Future<_i3.SurveyResultEntity>);
}

/// A class which mocks [LocalLoadSurveyResult].
///
/// See the documentation for Mockito's code generation for more information.
class LocalLoadSurveyResultMock extends _i1.Mock
    implements _i7.LocalLoadSurveyResult {
  LocalLoadSurveyResultMock() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.CacheStorage get cacheStorage =>
      (super.noSuchMethod(Invocation.getter(#cacheStorage),
          returnValue: _FakeCacheStorage()) as _i4.CacheStorage);
  @override
  _i6.Future<_i3.SurveyResultEntity> loadBySurvey({String? surveyId}) => (super
      .noSuchMethod(Invocation.method(#loadBySurvey, [], {#surveyId: surveyId}),
          returnValue: Future<_i3.SurveyResultEntity>.value(
              _FakeSurveyResultEntity())) as _i6
      .Future<_i3.SurveyResultEntity>);
  @override
  _i6.Future<void> validate(String? surveyId) =>
      (super.noSuchMethod(Invocation.method(#validate, [surveyId]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> save(
          {String? surveyId, _i3.SurveyResultEntity? surveyResult}) =>
      (super.noSuchMethod(
          Invocation.method(
              #save, [], {#surveyId: surveyId, #surveyResult: surveyResult}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);
}

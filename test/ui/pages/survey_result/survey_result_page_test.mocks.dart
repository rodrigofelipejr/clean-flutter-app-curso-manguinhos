// Mocks generated by Mockito 5.0.10 from annotations
// in fordev/test/ui/pages/survey_result/survey_result_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:fordev/ui/pages/survey_result/survey_result_presenter.dart'
    as _i2;
import 'package:fordev/ui/pages/survey_result/survey_result_view_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [SurveyResultPresenter].
///
/// See the documentation for Mockito's code generation for more information.
class SurveyResultPresenterMock extends _i1.Mock
    implements _i2.SurveyResultPresenter {
  SurveyResultPresenterMock() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<bool> get isLoadingStream =>
      (super.noSuchMethod(Invocation.getter(#isLoadingStream),
          returnValue: Stream<bool>.empty()) as _i3.Stream<bool>);
  @override
  _i3.Stream<bool> get isSessionExpiredStream =>
      (super.noSuchMethod(Invocation.getter(#isSessionExpiredStream),
          returnValue: Stream<bool>.empty()) as _i3.Stream<bool>);
  @override
  _i3.Stream<_i4.SurveyResultViewModel?> get surveyResultStream =>
      (super.noSuchMethod(Invocation.getter(#surveyResultStream),
              returnValue: Stream<_i4.SurveyResultViewModel?>.empty())
          as _i3.Stream<_i4.SurveyResultViewModel?>);
  @override
  _i3.Future<void> loadData() =>
      (super.noSuchMethod(Invocation.method(#loadData, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
}

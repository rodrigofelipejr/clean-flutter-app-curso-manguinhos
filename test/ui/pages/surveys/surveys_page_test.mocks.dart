// Mocks generated by Mockito 5.0.10 from annotations
// in fordev/test/ui/pages/surveys/surveys_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:fordev/ui/pages/surveys/survey_view_model.dart' as _i4;
import 'package:fordev/ui/pages/surveys/surveys_presenter.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [SurveysPresenter].
///
/// See the documentation for Mockito's code generation for more information.
class SurveysPresenterMock extends _i1.Mock implements _i2.SurveysPresenter {
  SurveysPresenterMock() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<bool> get isLoadingStream =>
      (super.noSuchMethod(Invocation.getter(#isLoadingStream),
          returnValue: Stream<bool>.empty()) as _i3.Stream<bool>);
  @override
  _i3.Stream<bool> get isSessionExpiredStream =>
      (super.noSuchMethod(Invocation.getter(#isSessionExpiredStream),
          returnValue: Stream<bool>.empty()) as _i3.Stream<bool>);
  @override
  _i3.Stream<List<_i4.SurveyViewModel>> get surveysStream =>
      (super.noSuchMethod(Invocation.getter(#surveysStream),
              returnValue: Stream<List<_i4.SurveyViewModel>>.empty())
          as _i3.Stream<List<_i4.SurveyViewModel>>);
  @override
  _i3.Stream<String?> get navigateToStream =>
      (super.noSuchMethod(Invocation.getter(#navigateToStream),
          returnValue: Stream<String?>.empty()) as _i3.Stream<String?>);
  @override
  _i3.Future<void> loadData() =>
      (super.noSuchMethod(Invocation.method(#loadData, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  void goToSurveyResult(String? surveyId) =>
      super.noSuchMethod(Invocation.method(#goToSurveyResult, [surveyId]),
          returnValueForMissingStub: null);
}

// Mocks generated by Mockito 5.0.10 from annotations
// in fordev/test/presentation/presenters/sign_up/getx_sign_up_presenter_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:fordev/domain/entities/account_entity.dart' as _i2;
import 'package:fordev/domain/usecases/account/add_account.dart' as _i4;
import 'package:fordev/domain/usecases/account/add_account_params.dart' as _i6;
import 'package:fordev/domain/usecases/account/save_current_account.dart'
    as _i7;
import 'package:fordev/presentation/dependencies/validation.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeAccountEntity extends _i1.Fake implements _i2.AccountEntity {}

/// A class which mocks [Validation].
///
/// See the documentation for Mockito's code generation for more information.
class ValidationMock extends _i1.Mock implements _i3.Validation {
  @override
  _i3.ValidationErro? validate({String? field, Map<dynamic, dynamic>? input}) =>
      (super.noSuchMethod(
              Invocation.method(#validate, [], {#field: field, #input: input}))
          as _i3.ValidationErro?);
}

/// A class which mocks [AddAccount].
///
/// See the documentation for Mockito's code generation for more information.
class AddAccountMock extends _i1.Mock implements _i4.AddAccount {
  @override
  _i5.Future<_i2.AccountEntity> add({_i6.AddAccountParams? params}) =>
      (super.noSuchMethod(Invocation.method(#add, [], {#params: params}),
              returnValue:
                  Future<_i2.AccountEntity>.value(_FakeAccountEntity()))
          as _i5.Future<_i2.AccountEntity>);
}

/// A class which mocks [SaveCurrentAccount].
///
/// See the documentation for Mockito's code generation for more information.
class SaveCurrentAccountMock extends _i1.Mock
    implements _i7.SaveCurrentAccount {
  @override
  _i5.Future<void> save(_i2.AccountEntity? account) =>
      (super.noSuchMethod(Invocation.method(#save, [account]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i5.Future<void>);
}
